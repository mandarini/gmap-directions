{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app/scripts/directions.ts","app/scripts/main.ts","app/scripts/map.ts","bundle.js","app/scripts/mapscript.ts","app/scripts/styledMap.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","calculateAndDisplayRoute","directionsService","directionsRenderer","service","origin","destination","chosenTravelMode","chosenUnitSystem","chosenTrafficModel","chosenTransit","value","route","query","travelMode","transitOptions","modes","drivingOptions","departureTime","Date","trafficModel","response","status","setDirections","getDistanceMatrix","origins","destinations","unitSystem","console","log","alert","document","getElementById","textContent","rows","elements","distance","text","duration","window","Object","defineProperty","directionCalculator","map","google","maps","DirectionsService","DirectionsRenderer","onChangeHandler","autocomplete_input_origin","autocomplete_input_destination","setMap","TravelMode","DRIVING","TrafficModel","BEST_GUESS","TransitMode","BUS","DistanceMatrixService","autocomplete_origin","places","Autocomplete","autocomplete_destination","bindTo","setFields","addListener","place","getPlace","geometry","name","addEventListener","event","target","setOptions","strictBounds","checked","travelModeRadios","getElementsByName","id","unitRadios","transitModeRadios","trafficModelRadios","2","mapscript_1","map_1","initMap","Map","zoom","scrollwheel","panControl","mapTypeControl","zoomControl","streetViewControl","scaleControl","zoomControlOptions","style","ZoomControlStyle","LARGE","position","ControlPosition","RIGHT_BOTTOM","FunWithMaps","loadMapScript","./map","./mapscript","3","warsaw","styledMap","directions_1","x","y","LatLng","coords","darkmap","StyledMapType","setCenter","mapTypes","set","setMapTypeId","controls","LEFT_TOP","push","TOP_CENTER","./styledMap","4","libraries","script","createElement","type","src","body","appendChild","elementType","stylers","color","visibility","featureType"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","export function directionCalculator(map: google.maps.Map) {\n  const directionsService = new google.maps.DirectionsService();\n  const directionsRenderer = new google.maps.DirectionsRenderer();\n  directionsRenderer.setMap(map);\n\n  let chosenTravelMode: google.maps.TravelMode = google.maps.TravelMode.DRIVING;\n  let chosenUnitSystem: google.maps.UnitSystem = 0;\n  let chosenTrafficModel: google.maps.TrafficModel =\n    google.maps.TrafficModel.BEST_GUESS;\n  let chosenTransit: google.maps.TransitMode = google.maps.TransitMode.BUS;\n\n  const service: google.maps.DistanceMatrixService = new google.maps.DistanceMatrixService();\n\n  const autocomplete_input_origin: HTMLInputElement = document.getElementById(\n    \"origin\",\n  ) as HTMLInputElement;\n  const autocomplete_input_destination: HTMLInputElement = document.getElementById(\n    \"destination\",\n  ) as HTMLInputElement;\n  const onChangeHandler = () => {\n    calculateAndDisplayRoute(\n      directionsService,\n      directionsRenderer,\n      service,\n      autocomplete_input_origin,\n      autocomplete_input_destination,\n      chosenTravelMode,\n      chosenUnitSystem,\n      chosenTrafficModel,\n      chosenTransit,\n    );\n  };\n\n  const autocomplete_origin = new google.maps.places.Autocomplete(\n    autocomplete_input_origin,\n  );\n  const autocomplete_destination = new google.maps.places.Autocomplete(\n    autocomplete_input_destination,\n  );\n\n  autocomplete_origin.bindTo(\"bounds\", map);\n  autocomplete_destination.bindTo(\"bounds\", map);\n\n  autocomplete_origin.setFields([\n    \"address_components\",\n    \"geometry\",\n    \"icon\",\n    \"name\",\n  ]);\n  autocomplete_destination.setFields([\n    \"address_components\",\n    \"geometry\",\n    \"icon\",\n    \"name\",\n  ]);\n\n  autocomplete_origin.addListener(\"place_changed\", () => {\n    const place = autocomplete_origin.getPlace();\n    onChangeHandler();\n    if (!place.geometry) {\n      window.alert(\"No details available for input: '\" + place.name + \"'\");\n      return;\n    }\n  });\n\n  autocomplete_destination.addListener(\"place_changed\", () => {\n    const place = autocomplete_destination.getPlace();\n    onChangeHandler();\n    if (!place.geometry) {\n      window.alert(\"No details available for input: '\" + place.name + \"'\");\n      return;\n    }\n  });\n\n  document\n    .getElementById(\"use-strict-bounds\")\n    .addEventListener(\"change\", (event) => {\n      console.log(event);\n      const target: HTMLInputElement = event.target as HTMLInputElement;\n      autocomplete_origin.setOptions({ strictBounds: target.checked });\n      autocomplete_destination.setOptions({ strictBounds: target.checked });\n    });\n\n  const travelModeRadios: NodeListOf<HTMLInputElement> = document.getElementsByName(\n    \"directionsMode\",\n  ) as NodeListOf<HTMLInputElement>;\n\n  for (var i = 0, length = travelModeRadios.length; i < length; i++) {\n    travelModeRadios[i].addEventListener(\"change\", (event) => {\n      const target: HTMLInputElement = event.target as HTMLInputElement;\n      console.log(target.id, target.value);\n      chosenTravelMode = target.value as google.maps.TravelMode;\n      if (\n        directionsService &&\n        directionsRenderer &&\n        service &&\n        autocomplete_input_origin &&\n        autocomplete_input_destination &&\n        chosenTravelMode &&\n        chosenUnitSystem &&\n        chosenTrafficModel &&\n        chosenTransit\n      ) {\n        calculateAndDisplayRoute(\n          directionsService,\n          directionsRenderer,\n          service,\n          autocomplete_input_origin,\n          autocomplete_input_destination,\n          chosenTravelMode,\n          chosenUnitSystem,\n          chosenTrafficModel,\n          chosenTransit,\n        );\n      }\n    });\n  }\n\n  const unitRadios: NodeListOf<HTMLInputElement> = document.getElementsByName(\n    \"unitSystem\",\n  ) as NodeListOf<HTMLInputElement>;\n\n  for (var i = 0, length = unitRadios.length; i < length; i++) {\n    unitRadios[i].addEventListener(\"change\", (event) => {\n      const target: HTMLInputElement = event.target as HTMLInputElement;\n      console.log(target.id, target.value);\n      chosenUnitSystem = (target.value as unknown) as google.maps.UnitSystem;\n      if (\n        directionsService &&\n        directionsRenderer &&\n        service &&\n        autocomplete_input_origin &&\n        autocomplete_input_destination &&\n        chosenTravelMode &&\n        chosenUnitSystem &&\n        chosenTrafficModel &&\n        chosenTransit\n      ) {\n        calculateAndDisplayRoute(\n          directionsService,\n          directionsRenderer,\n          service,\n          autocomplete_input_origin,\n          autocomplete_input_destination,\n          chosenTravelMode,\n          chosenUnitSystem,\n          chosenTrafficModel,\n          chosenTransit,\n        );\n      }\n    });\n  }\n\n  const transitModeRadios: NodeListOf<HTMLInputElement> = document.getElementsByName(\n    \"transitMode\",\n  ) as NodeListOf<HTMLInputElement>;\n\n  for (var i = 0, length = transitModeRadios.length; i < length; i++) {\n    transitModeRadios[i].addEventListener(\"change\", (event) => {\n      const target: HTMLInputElement = event.target as HTMLInputElement;\n      console.log(target.id, target.value);\n      chosenTransit = (target.value as unknown) as google.maps.TransitMode;\n      if (\n        directionsService &&\n        directionsRenderer &&\n        service &&\n        autocomplete_input_origin &&\n        autocomplete_input_destination &&\n        chosenTravelMode &&\n        chosenUnitSystem &&\n        chosenTrafficModel &&\n        chosenTransit\n      ) {\n        calculateAndDisplayRoute(\n          directionsService,\n          directionsRenderer,\n          service,\n          autocomplete_input_origin,\n          autocomplete_input_destination,\n          chosenTravelMode,\n          chosenUnitSystem,\n          chosenTrafficModel,\n          chosenTransit,\n        );\n      }\n    });\n  }\n\n  const trafficModelRadios: NodeListOf<HTMLInputElement> = document.getElementsByName(\n    \"trafficModel\",\n  ) as NodeListOf<HTMLInputElement>;\n\n  for (var i = 0, length = trafficModelRadios.length; i < length; i++) {\n    trafficModelRadios[i].addEventListener(\"change\", (event) => {\n      const target: HTMLInputElement = event.target as HTMLInputElement;\n      console.log(target.id, target.value);\n      chosenTrafficModel = (target.value as unknown) as google.maps.TrafficModel;\n      if (\n        directionsService &&\n        directionsRenderer &&\n        service &&\n        autocomplete_input_origin &&\n        autocomplete_input_destination &&\n        chosenTravelMode &&\n        chosenUnitSystem &&\n        chosenTrafficModel &&\n        chosenTransit\n      ) {\n        calculateAndDisplayRoute(\n          directionsService,\n          directionsRenderer,\n          service,\n          autocomplete_input_origin,\n          autocomplete_input_destination,\n          chosenTravelMode,\n          chosenUnitSystem,\n          chosenTrafficModel,\n          chosenTransit,\n        );\n      }\n    });\n  }\n}\n\nfunction calculateAndDisplayRoute(\n  directionsService: google.maps.DirectionsService,\n  directionsRenderer: google.maps.DirectionsRenderer,\n  service: google.maps.DistanceMatrixService,\n  origin: HTMLInputElement,\n  destination: HTMLInputElement,\n  chosenTravelMode: google.maps.TravelMode,\n  chosenUnitSystem: google.maps.UnitSystem,\n  chosenTrafficModel: google.maps.TrafficModel,\n  chosenTransit: google.maps.TransitMode,\n) {\n  if (\n    origin.value &&\n    origin.value.length > 0 &&\n    destination.value &&\n    destination.value.length > 0\n  ) {\n    directionsService.route(\n      {\n        origin: { query: origin.value },\n        destination: { query: destination.value },\n        travelMode: chosenTravelMode,\n        transitOptions: {\n          modes: [chosenTransit],\n        },\n        drivingOptions: {\n          departureTime: new Date(),\n          trafficModel: chosenTrafficModel,\n        },\n      },\n      (response: any, status: any) => {\n        if (status === \"OK\") {\n          directionsRenderer.setDirections(response);\n          service.getDistanceMatrix(\n            {\n              origins: [origin.value],\n              destinations: [destination.value],\n              travelMode: chosenTravelMode,\n              unitSystem: chosenUnitSystem,\n            },\n            (response, status) => {\n              console.log(response);\n              if (status !== \"OK\") {\n                alert(\"Error was: \" + status);\n              } else {\n                (document.getElementById(\n                  \"distance\",\n                ) as HTMLSpanElement).textContent =\n                  response.rows[0].elements[0].distance.text +\n                  \" \" +\n                  response.rows[0].elements[0].duration.text;\n              }\n            },\n          );\n        } else {\n          window.alert(\"Directions request failed due to \" + status);\n        }\n      },\n    );\n  }\n}\n","/// <reference types=\"@types/markerclustererplus\" />\n\nimport { loadMapScript } from \"./mapscript\";\n// import { RegisterSW } from \"./sw-reg\";\nimport { FunWithMaps } from \"./map\";\nimport {} from \"google-maps\";\n\n// RegisterSW();\n\nlet map: google.maps.Map;\n\nif (window[\"google\"] && window[\"google\"][\"maps\"]) {\n  initMap();\n} else {\n  loadMapScript(\"geometry,drawing,visualization,places\", (event: Event) => {\n    initMap();\n  });\n}\n\nfunction initMap() {\n  map = new google.maps.Map(document.getElementById(\"map\"), {\n    zoom: 12,\n    scrollwheel: true,\n    panControl: false,\n    mapTypeControl: false,\n    zoomControl: true,\n    streetViewControl: false,\n    scaleControl: true,\n    zoomControlOptions: {\n      style: google.maps.ZoomControlStyle.LARGE,\n      position: google.maps.ControlPosition.RIGHT_BOTTOM,\n    },\n  });\n  FunWithMaps(map);\n}\n","/// <reference types=\"@types/markerclustererplus\" />\nimport {} from \"google-maps\";\nimport * as styledMap from \"./styledMap\";\nimport { directionCalculator } from \"./directions\";\n\nlet this_map: google.maps.Map;\nlet warsaw: google.maps.LatLng;\n\nexport function FunWithMaps(map: google.maps.Map) {\n  this_map = map;\n  warsaw = coords(52.2375313, 21.0172313);\n  let darkmap = new google.maps.StyledMapType(\n    styledMap.styledMap as google.maps.MapTypeStyle[],\n    {\n      name: \"Dark Map\",\n    },\n  );\n\n  map.setCenter(warsaw);\n  map.mapTypes.set(\"dark_map\", darkmap);\n  map.setMapTypeId(\"dark_map\");\n\n  map.controls[google.maps.ControlPosition.LEFT_TOP].push(\n    document.getElementById(\"controls\"),\n  );\n\n  map.controls[google.maps.ControlPosition.RIGHT_BOTTOM].push(\n    document.getElementById(\"katlink\"),\n  );\n  map.controls[google.maps.ControlPosition.TOP_CENTER].push(\n    document.getElementById(\"place-search\"),\n  );\n\n  directionCalculator(map);\n}\n\nfunction coords(x: number, y: number) {\n  return new google.maps.LatLng(x, y);\n}\n","(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction directionCalculator(map) {\n    const directionsService = new google.maps.DirectionsService();\n    const directionsRenderer = new google.maps.DirectionsRenderer();\n    directionsRenderer.setMap(map);\n    let chosenTravelMode = google.maps.TravelMode.DRIVING;\n    let chosenUnitSystem = 0;\n    let chosenTrafficModel = google.maps.TrafficModel.BEST_GUESS;\n    let chosenTransit = google.maps.TransitMode.BUS;\n    const service = new google.maps.DistanceMatrixService();\n    const autocomplete_input_origin = document.getElementById(\"origin\");\n    const autocomplete_input_destination = document.getElementById(\"destination\");\n    const onChangeHandler = () => {\n        calculateAndDisplayRoute(directionsService, directionsRenderer, service, autocomplete_input_origin, autocomplete_input_destination, chosenTravelMode, chosenUnitSystem, chosenTrafficModel, chosenTransit);\n    };\n    const autocomplete_origin = new google.maps.places.Autocomplete(autocomplete_input_origin);\n    const autocomplete_destination = new google.maps.places.Autocomplete(autocomplete_input_destination);\n    autocomplete_origin.bindTo(\"bounds\", map);\n    autocomplete_destination.bindTo(\"bounds\", map);\n    autocomplete_origin.setFields([\n        \"address_components\",\n        \"geometry\",\n        \"icon\",\n        \"name\",\n    ]);\n    autocomplete_destination.setFields([\n        \"address_components\",\n        \"geometry\",\n        \"icon\",\n        \"name\",\n    ]);\n    autocomplete_origin.addListener(\"place_changed\", () => {\n        const place = autocomplete_origin.getPlace();\n        onChangeHandler();\n        if (!place.geometry) {\n            window.alert(\"No details available for input: '\" + place.name + \"'\");\n            return;\n        }\n    });\n    autocomplete_destination.addListener(\"place_changed\", () => {\n        const place = autocomplete_destination.getPlace();\n        onChangeHandler();\n        if (!place.geometry) {\n            window.alert(\"No details available for input: '\" + place.name + \"'\");\n            return;\n        }\n    });\n    document\n        .getElementById(\"use-strict-bounds\")\n        .addEventListener(\"change\", (event) => {\n        console.log(event);\n        const target = event.target;\n        autocomplete_origin.setOptions({ strictBounds: target.checked });\n        autocomplete_destination.setOptions({ strictBounds: target.checked });\n    });\n    const travelModeRadios = document.getElementsByName(\"directionsMode\");\n    for (var i = 0, length = travelModeRadios.length; i < length; i++) {\n        travelModeRadios[i].addEventListener(\"change\", (event) => {\n            const target = event.target;\n            console.log(target.id, target.value);\n            chosenTravelMode = target.value;\n            if (directionsService &&\n                directionsRenderer &&\n                service &&\n                autocomplete_input_origin &&\n                autocomplete_input_destination &&\n                chosenTravelMode &&\n                chosenUnitSystem &&\n                chosenTrafficModel &&\n                chosenTransit) {\n                calculateAndDisplayRoute(directionsService, directionsRenderer, service, autocomplete_input_origin, autocomplete_input_destination, chosenTravelMode, chosenUnitSystem, chosenTrafficModel, chosenTransit);\n            }\n        });\n    }\n    const unitRadios = document.getElementsByName(\"unitSystem\");\n    for (var i = 0, length = unitRadios.length; i < length; i++) {\n        unitRadios[i].addEventListener(\"change\", (event) => {\n            const target = event.target;\n            console.log(target.id, target.value);\n            chosenUnitSystem = target.value;\n            if (directionsService &&\n                directionsRenderer &&\n                service &&\n                autocomplete_input_origin &&\n                autocomplete_input_destination &&\n                chosenTravelMode &&\n                chosenUnitSystem &&\n                chosenTrafficModel &&\n                chosenTransit) {\n                calculateAndDisplayRoute(directionsService, directionsRenderer, service, autocomplete_input_origin, autocomplete_input_destination, chosenTravelMode, chosenUnitSystem, chosenTrafficModel, chosenTransit);\n            }\n        });\n    }\n    const transitModeRadios = document.getElementsByName(\"transitMode\");\n    for (var i = 0, length = transitModeRadios.length; i < length; i++) {\n        transitModeRadios[i].addEventListener(\"change\", (event) => {\n            const target = event.target;\n            console.log(target.id, target.value);\n            chosenTransit = target.value;\n            if (directionsService &&\n                directionsRenderer &&\n                service &&\n                autocomplete_input_origin &&\n                autocomplete_input_destination &&\n                chosenTravelMode &&\n                chosenUnitSystem &&\n                chosenTrafficModel &&\n                chosenTransit) {\n                calculateAndDisplayRoute(directionsService, directionsRenderer, service, autocomplete_input_origin, autocomplete_input_destination, chosenTravelMode, chosenUnitSystem, chosenTrafficModel, chosenTransit);\n            }\n        });\n    }\n    const trafficModelRadios = document.getElementsByName(\"trafficModel\");\n    for (var i = 0, length = trafficModelRadios.length; i < length; i++) {\n        trafficModelRadios[i].addEventListener(\"change\", (event) => {\n            const target = event.target;\n            console.log(target.id, target.value);\n            chosenTrafficModel = target.value;\n            if (directionsService &&\n                directionsRenderer &&\n                service &&\n                autocomplete_input_origin &&\n                autocomplete_input_destination &&\n                chosenTravelMode &&\n                chosenUnitSystem &&\n                chosenTrafficModel &&\n                chosenTransit) {\n                calculateAndDisplayRoute(directionsService, directionsRenderer, service, autocomplete_input_origin, autocomplete_input_destination, chosenTravelMode, chosenUnitSystem, chosenTrafficModel, chosenTransit);\n            }\n        });\n    }\n}\nexports.directionCalculator = directionCalculator;\nfunction calculateAndDisplayRoute(directionsService, directionsRenderer, service, origin, destination, chosenTravelMode, chosenUnitSystem, chosenTrafficModel, chosenTransit) {\n    if (origin.value &&\n        origin.value.length > 0 &&\n        destination.value &&\n        destination.value.length > 0) {\n        directionsService.route({\n            origin: { query: origin.value },\n            destination: { query: destination.value },\n            travelMode: chosenTravelMode,\n            transitOptions: {\n                modes: [chosenTransit],\n            },\n            drivingOptions: {\n                departureTime: new Date(),\n                trafficModel: chosenTrafficModel,\n            },\n        }, (response, status) => {\n            if (status === \"OK\") {\n                directionsRenderer.setDirections(response);\n                service.getDistanceMatrix({\n                    origins: [origin.value],\n                    destinations: [destination.value],\n                    travelMode: chosenTravelMode,\n                    unitSystem: chosenUnitSystem,\n                }, (response, status) => {\n                    console.log(response);\n                    if (status !== \"OK\") {\n                        alert(\"Error was: \" + status);\n                    }\n                    else {\n                        document.getElementById(\"distance\").textContent =\n                            response.rows[0].elements[0].distance.text +\n                                \" \" +\n                                response.rows[0].elements[0].duration.text;\n                    }\n                });\n            }\n            else {\n                window.alert(\"Directions request failed due to \" + status);\n            }\n        });\n    }\n}\n\n},{}],2:[function(require,module,exports){\n\"use strict\";\n/// <reference types=\"@types/markerclustererplus\" />\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst mapscript_1 = require(\"./mapscript\");\n// import { RegisterSW } from \"./sw-reg\";\nconst map_1 = require(\"./map\");\n// RegisterSW();\nlet map;\nif (window[\"google\"] && window[\"google\"][\"maps\"]) {\n    initMap();\n}\nelse {\n    mapscript_1.loadMapScript(\"geometry,drawing,visualization,places\", (event) => {\n        initMap();\n    });\n}\nfunction initMap() {\n    map = new google.maps.Map(document.getElementById(\"map\"), {\n        zoom: 12,\n        scrollwheel: true,\n        panControl: false,\n        mapTypeControl: false,\n        zoomControl: true,\n        streetViewControl: false,\n        scaleControl: true,\n        zoomControlOptions: {\n            style: google.maps.ZoomControlStyle.LARGE,\n            position: google.maps.ControlPosition.RIGHT_BOTTOM,\n        },\n    });\n    map_1.FunWithMaps(map);\n}\n\n},{\"./map\":3,\"./mapscript\":4}],3:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst styledMap = require(\"./styledMap\");\nconst directions_1 = require(\"./directions\");\nlet this_map;\nlet warsaw;\nfunction FunWithMaps(map) {\n    this_map = map;\n    warsaw = coords(52.2375313, 21.0172313);\n    let darkmap = new google.maps.StyledMapType(styledMap.styledMap, {\n        name: \"Dark Map\",\n    });\n    map.setCenter(warsaw);\n    map.mapTypes.set(\"dark_map\", darkmap);\n    map.setMapTypeId(\"dark_map\");\n    map.controls[google.maps.ControlPosition.LEFT_TOP].push(document.getElementById(\"controls\"));\n    map.controls[google.maps.ControlPosition.RIGHT_BOTTOM].push(document.getElementById(\"katlink\"));\n    map.controls[google.maps.ControlPosition.TOP_CENTER].push(document.getElementById(\"place-search\"));\n    directions_1.directionCalculator(map);\n}\nexports.FunWithMaps = FunWithMaps;\nfunction coords(x, y) {\n    return new google.maps.LatLng(x, y);\n}\n\n},{\"./directions\":1,\"./styledMap\":5}],4:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction loadMapScript(libraries, c) {\n    if (!document.getElementById(\"gmap\")) {\n        const script = document.createElement(\"script\");\n        script.type = \"text/javascript\";\n        script.src =\n            \"https://maps.googleapis.com/maps/api/js?key=AIzaSyDeG77r1asgi9uVe4S5Y7easEUmb1Vsw4c\";\n        if (libraries && libraries.length > 0) {\n            script.src = script.src + \"&libraries=\" + libraries;\n        }\n        script.id = \"gmap\";\n        script.addEventListener(\"load\", e => {\n            c(e);\n        }, false);\n        document.body.appendChild(script);\n    }\n}\nexports.loadMapScript = loadMapScript;\n\n},{}],5:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.styledMap = [\n    { elementType: \"geometry\", stylers: [{ color: \"#9a9a9a\" }] },\n    { elementType: \"labels.text.fill\", stylers: [{ color: \"#111111\" }] },\n    { elementType: \"labels.text.stroke\", stylers: [{ visibility: \"off\" }] },\n    {\n        featureType: \"administrative\",\n        elementType: \"geometry.stroke\",\n        stylers: [{ color: \"#c8c8c8\" }]\n    },\n    {\n        featureType: \"administrative.land_parcel\",\n        elementType: \"geometry.stroke\",\n        stylers: [{ color: \"#c8c8c8\" }]\n    },\n    {\n        featureType: \"administrative.land_parcel\",\n        elementType: \"labels.text.fill\",\n        stylers: [{ color: \"#c8c8c8\" }]\n    },\n    {\n        featureType: \"landscape.natural\",\n        elementType: \"geometry\",\n        stylers: [{ color: \"#c8c8c8\" }]\n    },\n    {\n        featureType: \"poi\",\n        elementType: \"geometry\",\n        stylers: [{ color: \"#c8c8c8\" }]\n    },\n    {\n        featureType: \"poi\",\n        elementType: \"labels.text.fill\",\n        stylers: [{ color: \"#111111\" }, { visibility: \"simplified\" }]\n    },\n    {\n        featureType: \"poi.park\",\n        elementType: \"geometry.fill\",\n        stylers: [{ color: \"#c8c8c8\" }]\n    },\n    {\n        featureType: \"poi.park\",\n        elementType: \"labels.text.fill\",\n        stylers: [{ color: \"#111111\" }]\n    },\n    {\n        featureType: \"poi.business\",\n        stylers: [{ visibility: \"off\" }]\n    },\n    {\n        featureType: \"road\",\n        elementType: \"geometry\",\n        stylers: [{ color: \"#aaaaaa\" }]\n        // stylers: [{color: '#ff0000'}]\n    },\n    {\n        featureType: \"road.arterial\",\n        elementType: \"geometry\",\n        stylers: [{ color: \"#999999\" }]\n        // stylers: [{color: '#ff0000'}]\n    },\n    {\n        featureType: \"road.highway\",\n        elementType: \"geometry\",\n        stylers: [{ color: \"#666666\" }]\n        // stylers: [{color: '#ff0000'}]\n    },\n    {\n        featureType: \"road.highway\",\n        elementType: \"geometry.stroke\",\n        stylers: [{ visibility: \"off\" }]\n    },\n    {\n        featureType: \"road.highway.controlled_access\",\n        elementType: \"geometry\",\n        stylers: [{ color: \"#444444\" }]\n    },\n    {\n        featureType: \"road.highway.controlled_access\",\n        elementType: \"geometry.stroke\",\n        stylers: [{ visibility: \"off\" }]\n    },\n    {\n        featureType: \"road.local\",\n        elementType: \"labels.text.fill\",\n        stylers: [{ color: \"#111111\" }]\n    },\n    {\n        featureType: \"transit.line\",\n        elementType: \"geometry\",\n        stylers: [{ color: \"#c8c8c8\" }]\n    },\n    {\n        featureType: \"transit.line\",\n        elementType: \"labels.text.fill\",\n        stylers: [{ color: \"#111111\" }]\n    },\n    {\n        featureType: \"transit.line\",\n        elementType: \"labels.text.stroke\",\n        stylers: [{ visibility: \"off\" }]\n    },\n    {\n        featureType: \"transit.station\",\n        elementType: \"geometry\",\n        stylers: [{ color: \"#c8c8c8\" }]\n    },\n    {\n        featureType: \"water\",\n        elementType: \"geometry.fill\",\n        stylers: [{ color: \"#222222\" }]\n    },\n    {\n        featureType: \"water\",\n        elementType: \"labels.text.fill\",\n        stylers: [{ color: \"#222222\" }]\n    }\n];\n\n},{}]},{},[2])\n\n","export function loadMapScript(libraries: string, c: Function): void {\n  if (!document.getElementById(\"gmap\")) {\n    const script = document.createElement(\"script\");\n    script.type = \"text/javascript\";\n    script.src =\n      \"https://maps.googleapis.com/maps/api/js?key=AIzaSyDeG77r1asgi9uVe4S5Y7easEUmb1Vsw4c\";\n    if (libraries && libraries.length > 0) {\n      script.src = script.src + \"&libraries=\" + libraries;\n    }\n    script.id = \"gmap\";\n    script.addEventListener(\n      \"load\",\n      e => {\n        c(e);\n      },\n      false\n    );\n    document.body.appendChild(script);\n  }\n}\n","export const styledMap = [\n  { elementType: \"geometry\", stylers: [{ color: \"#9a9a9a\" }] },\n  { elementType: \"labels.text.fill\", stylers: [{ color: \"#111111\" }] },\n  { elementType: \"labels.text.stroke\", stylers: [{ visibility: \"off\" }] },\n  {\n    featureType: \"administrative\",\n    elementType: \"geometry.stroke\",\n    stylers: [{ color: \"#c8c8c8\" }]\n  },\n  {\n    featureType: \"administrative.land_parcel\",\n    elementType: \"geometry.stroke\",\n    stylers: [{ color: \"#c8c8c8\" }]\n  },\n  {\n    featureType: \"administrative.land_parcel\",\n    elementType: \"labels.text.fill\",\n    stylers: [{ color: \"#c8c8c8\" }]\n  },\n  {\n    featureType: \"landscape.natural\",\n    elementType: \"geometry\",\n    stylers: [{ color: \"#c8c8c8\" }]\n  },\n  {\n    featureType: \"poi\",\n    elementType: \"geometry\",\n    stylers: [{ color: \"#c8c8c8\" }]\n  },\n  {\n    featureType: \"poi\",\n    elementType: \"labels.text.fill\",\n    stylers: [{ color: \"#111111\" }, { visibility: \"simplified\" }]\n  },\n  {\n    featureType: \"poi.park\",\n    elementType: \"geometry.fill\",\n    stylers: [{ color: \"#c8c8c8\" }]\n  },\n  {\n    featureType: \"poi.park\",\n    elementType: \"labels.text.fill\",\n    stylers: [{ color: \"#111111\" }]\n  },\n  {\n    featureType: \"poi.business\",\n    stylers: [{ visibility: \"off\" }]\n  },\n  {\n    featureType: \"road\",\n    elementType: \"geometry\",\n    stylers: [{ color: \"#aaaaaa\" }]\n    // stylers: [{color: '#ff0000'}]\n  },\n  {\n    featureType: \"road.arterial\",\n    elementType: \"geometry\",\n    stylers: [{ color: \"#999999\" }]\n    // stylers: [{color: '#ff0000'}]\n  },\n  {\n    featureType: \"road.highway\",\n    elementType: \"geometry\",\n    stylers: [{ color: \"#666666\" }]\n    // stylers: [{color: '#ff0000'}]\n  },\n  {\n    featureType: \"road.highway\",\n    elementType: \"geometry.stroke\",\n    stylers: [{ visibility: \"off\" }]\n  },\n  {\n    featureType: \"road.highway.controlled_access\",\n    elementType: \"geometry\",\n    stylers: [{ color: \"#444444\" }]\n  },\n  {\n    featureType: \"road.highway.controlled_access\",\n    elementType: \"geometry.stroke\",\n    stylers: [{ visibility: \"off\" }]\n  },\n  {\n    featureType: \"road.local\",\n    elementType: \"labels.text.fill\",\n    stylers: [{ color: \"#111111\" }]\n  },\n  {\n    featureType: \"transit.line\",\n    elementType: \"geometry\",\n    stylers: [{ color: \"#c8c8c8\" }]\n  },\n  {\n    featureType: \"transit.line\",\n    elementType: \"labels.text.fill\",\n    stylers: [{ color: \"#111111\" }]\n  },\n  {\n    featureType: \"transit.line\",\n    elementType: \"labels.text.stroke\",\n    stylers: [{ visibility: \"off\" }]\n  },\n  {\n    featureType: \"transit.station\",\n    elementType: \"geometry\",\n    stylers: [{ color: \"#c8c8c8\" }]\n  },\n  {\n    featureType: \"water\",\n    elementType: \"geometry.fill\",\n    stylers: [{ color: \"#222222\" }]\n  },\n  {\n    featureType: \"water\",\n    elementType: \"labels.text.fill\",\n    stylers: [{ color: \"#222222\" }]\n  }\n];\n"]}